[2024-01-30T15:28:50.883+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: fetch_s3_csv_files.fetch_csv_files_task manual__2024-01-30T15:28:46.553797+00:00 [queued]>
[2024-01-30T15:28:50.899+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: fetch_s3_csv_files.fetch_csv_files_task manual__2024-01-30T15:28:46.553797+00:00 [queued]>
[2024-01-30T15:28:50.901+0000] {taskinstance.py:1308} INFO - Starting attempt 1 of 1
[2024-01-30T15:28:50.923+0000] {taskinstance.py:1327} INFO - Executing <Task(PythonOperator): fetch_csv_files_task> on 2024-01-30 15:28:46.553797+00:00
[2024-01-30T15:28:50.934+0000] {standard_task_runner.py:57} INFO - Started process 2315 to run task
[2024-01-30T15:28:50.948+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'fetch_s3_csv_files', 'fetch_csv_files_task', 'manual__2024-01-30T15:28:46.553797+00:00', '--job-id', '8', '--raw', '--subdir', 'DAGS_FOLDER/energy-prod-cons-dag/data_energy_dag.py', '--cfg-path', '/tmp/tmpjj2htkph']
[2024-01-30T15:28:50.955+0000] {standard_task_runner.py:85} INFO - Job 8: Subtask fetch_csv_files_task
[2024-01-30T15:28:51.105+0000] {task_command.py:410} INFO - Running <TaskInstance: fetch_s3_csv_files.fetch_csv_files_task manual__2024-01-30T15:28:46.553797+00:00 [running]> on host 952b3f8a1a94
[2024-01-30T15:28:51.294+0000] {taskinstance.py:1547} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='fetch_s3_csv_files' AIRFLOW_CTX_TASK_ID='fetch_csv_files_task' AIRFLOW_CTX_EXECUTION_DATE='2024-01-30T15:28:46.553797+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-01-30T15:28:46.553797+00:00'
[2024-01-30T15:28:51.327+0000] {base.py:73} INFO - Using connection ID 'aws_conn_id' for task execution.
[2024-01-30T15:28:51.330+0000] {connection_wrapper.py:337} INFO - AWS Connection (conn_id='aws_conn_id', conn_type='aws') credentials retrieved from login and password.
[2024-01-30T15:28:54.586+0000] {logging_mixin.py:149} INFO - ***** HERE ARE ALL THE FILES ****** ['production/', 'production/indicateur-mensuel-gaz-renouvelable-des-territoires-par-departement.csv', 'production/indicateur-mensuel-gaz-renouvelable-des-territoires-par-epci.csv', 'production/indicateur-mensuel-gaz-renouvelable-des-territoires-par-region.csv', 'production/production-electrique-par-filiere-a-la-maille-departement.csv', 'production/production-electrique-par-filiere-a-la-maille-epci.csv', 'production/production-electrique-par-filiere-a-la-maille-region.csv']
[2024-01-30T15:28:54.588+0000] {logging_mixin.py:149} INFO - ***** HERE IS A FILE ***** :  production/indicateur-mensuel-gaz-renouvelable-des-territoires-par-departement.csv
[2024-01-30T15:28:54.592+0000] {s3.py:971} INFO - This function shadows the 'download_file' method of S3 API, but it is not the same. If you want to use the original method from S3 API, please call 'S3Hook.get_conn().download_file()'
[2024-01-30T15:28:54.594+0000] {s3.py:976} INFO - Downloading source S3 file from Bucket production/indicateur-mensuel-gaz-renouvelable-des-territoires-par-departement.csv with path data-engineering-project-siad
[2024-01-30T15:28:54.761+0000] {taskinstance.py:1824} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 181, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 198, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/energy-prod-cons-dag/data_energy_dag.py", line 59, in _fetch_csv_files
    s3_hook.download_file(bucket_name, file, local_path)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 111, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 82, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 979, in download_file
    s3_obj = self.get_key(key, bucket_name)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 111, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 82, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 542, in get_key
    obj.load()
  File "/home/airflow/.local/lib/python3.7/site-packages/boto3/resources/factory.py", line 564, in do_action
    response = action(self, *args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/boto3/resources/action.py", line 88, in __call__
    response = getattr(parent.meta.client, operation_name)(*args, **params)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/client.py", line 530, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/client.py", line 924, in _make_api_call
    headers=additional_headers,
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/client.py", line 988, in _convert_to_request_dict
    api_params, operation_model, context
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/client.py", line 1030, in _emit_api_params
    context=context,
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/hooks.py", line 412, in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/hooks.py", line 256, in emit
    return self._emit(event_name, kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/hooks.py", line 239, in _emit
    response = handler(**kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/handlers.py", line 285, in validate_bucket_name
    raise ParamValidationError(report=error_msg)
botocore.exceptions.ParamValidationError: Parameter validation failed:
Invalid bucket name "production/indicateur-mensuel-gaz-renouvelable-des-territoires-par-departement.csv": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"
[2024-01-30T15:28:54.794+0000] {taskinstance.py:1350} INFO - Marking task as FAILED. dag_id=fetch_s3_csv_files, task_id=fetch_csv_files_task, execution_date=20240130T152846, start_date=20240130T152850, end_date=20240130T152854
[2024-01-30T15:28:54.825+0000] {standard_task_runner.py:109} ERROR - Failed to execute job 8 for task fetch_csv_files_task (Parameter validation failed:
Invalid bucket name "production/indicateur-mensuel-gaz-renouvelable-des-territoires-par-departement.csv": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"; 2315)
[2024-01-30T15:28:54.905+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 1
[2024-01-30T15:28:54.959+0000] {taskinstance.py:2651} INFO - 0 downstream tasks scheduled from follow-on schedule check
